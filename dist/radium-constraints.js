(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["RadiumConstraints"] = factory(require("react"));
	else
		root["RadiumConstraints"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.constrain = exports.AutoSVG = exports.AutoDOM = exports.Subview = exports.View = undefined;
	
	var _constraintLayout = __webpack_require__(1);
	
	var _constraintLayout2 = _interopRequireDefault(_constraintLayout);
	
	var _view = __webpack_require__(5);
	
	var _view2 = _interopRequireDefault(_view);
	
	var _subview = __webpack_require__(7);
	
	var _subview2 = _interopRequireDefault(_subview);
	
	var _autodom = __webpack_require__(8);
	
	var _autodom2 = _interopRequireDefault(_autodom);
	
	var _autosvg = __webpack_require__(9);
	
	var _autosvg2 = _interopRequireDefault(_autosvg);
	
	var _constraintBuilder = __webpack_require__(10);
	
	var _constraintBuilder2 = _interopRequireDefault(_constraintBuilder);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _constraintLayout2.default;
	exports.View = _view2.default;
	exports.Subview = _subview2.default;
	exports.AutoDOM = _autodom2.default;
	exports.AutoSVG = _autosvg2.default;
	exports.constrain = _constraintBuilder2.default;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _layoutClient = __webpack_require__(3);
	
	var _layoutClient2 = _interopRequireDefault(_layoutClient);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ConstraintLayout = function (_Component) {
	  _inherits(ConstraintLayout, _Component);
	
	  function ConstraintLayout(props) {
	    _classCallCheck(this, ConstraintLayout);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ConstraintLayout).call(this, props));
	
	    _this.client = new _layoutClient2.default();
	    return _this;
	  }
	
	  _createClass(ConstraintLayout, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.client.terminate();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "div",
	        null,
	        this.props.children
	      );
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        client: this.client
	      };
	    }
	  }]);
	
	  return ConstraintLayout;
	}(_react.Component);
	
	ConstraintLayout.childContextTypes = {
	  client: _react.PropTypes.instanceOf(_layoutClient2.default)
	};
	ConstraintLayout.propTypes = {
	  children: _react.PropTypes.node
	};
	exports.default = ConstraintLayout;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	/* eslint-env browser */
	
	var _workerProxy = __webpack_require__(4);
	
	var _workerProxy2 = _interopRequireDefault(_workerProxy);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var LayoutWorker = function LayoutWorker() {
	  return new Worker(URL.createObjectURL(new Blob([atob("")], { type: "text/javascript" })));
	};
	var DEFAULT_THREAD_COUNT = 4;
	
	var LayoutClient = function () {
	  function LayoutClient(threadCount) {
	    var workerFactory = arguments.length <= 1 || arguments[1] === undefined ? LayoutWorker : arguments[1];
	    var ProxyClass = arguments.length <= 2 || arguments[2] === undefined ? _workerProxy2.default : arguments[2];
	
	    _classCallCheck(this, LayoutClient);
	
	    this.views = {};
	    this.workers = [];
	    this.currentWorker = 0;
	
	    // Number of workers determined by either:
	    // - The constructor
	    // - The number of cores on the machine
	    // - A default fallback
	    var cores = navigator.hardwareConcurrency;
	    var workerCount = threadCount || cores || DEFAULT_THREAD_COUNT;
	
	    // Instantiate the workers and add listeners to each one
	    while (workerCount--) {
	      var proxy = new ProxyClass(workerFactory());
	      this.workers.push(proxy);
	    }
	  }
	
	  _createClass(LayoutClient, [{
	    key: "registerView",
	    value: function registerView( // eslint-disable-line max-params
	    viewName, size, spacing, callback) {
	      if (this.views[viewName]) {
	        return;
	      }
	
	      this.views[viewName] = {
	        workerId: this.currentWorker, callback: callback
	      };
	
	      this.workers[this.currentWorker].run("registerView", {
	        viewName: viewName, size: size, spacing: spacing
	      }, callback);
	
	      // Cycle through the worker pool
	      if (this.currentWorker === this.workers.length - 1) {
	        this.currentWorker = 0;
	      } else {
	        this.currentWorker++;
	      }
	    }
	  }, {
	    key: "deregisterView",
	    value: function deregisterView(viewName, callback) {
	      if (!this.views[viewName]) {
	        return;
	      }
	
	      var worker = this.workerForView(viewName);
	      if (worker) {
	        worker.run("deregisterView", { viewName: viewName }, callback);
	        this.views[viewName] = null;
	      }
	    }
	  }, {
	    key: "workerForView",
	    value: function workerForView(viewName) {
	      if (!this.views[viewName]) {
	        return null;
	      }
	      return this.workers[this.views[viewName].workerId];
	    }
	  }, {
	    key: "run",
	    value: function run(method, args, callback) {
	      var worker = this.workerForView(args.viewName);
	      if (worker) {
	        worker.run(method, args, callback);
	      }
	    }
	  }, {
	    key: "terminate",
	    value: function terminate() {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.workers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var worker = _step.value;
	
	          worker.terminate();
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.workers = [];
	      this.currentWorker = 0;
	    }
	  }]);
	
	  return LayoutClient;
	}();

	exports.default = LayoutClient;

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var WorkerProxy = function () {
	  function WorkerProxy(worker) {
	    var _this = this;
	
	    _classCallCheck(this, WorkerProxy);
	
	    this.worker = worker;
	    this.callbacks = {};
	    this.worker.onmessage = function (_ref) {
	      var message = _ref.data;
	
	      var method = message.method || null;
	      if (method) {
	        var _cb = _this.callbacks[method];
	        if (_cb) {
	          _cb(message.result || null);
	          _this.callbacks[method] = null;
	        }
	      }
	    };
	  }
	
	  _createClass(WorkerProxy, [{
	    key: "run",
	    value: function run(method, args, cb) {
	      this.callbacks[method] = cb;
	      this.worker.postMessage({ method: method, args: args });
	    }
	  }, {
	    key: "terminate",
	    value: function terminate() {
	      this.worker.terminate();
	    }
	  }]);
	
	  return WorkerProxy;
	}();

	exports.default = WorkerProxy;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _extractLayoutProps = __webpack_require__(6);
	
	var _extractLayoutProps2 = _interopRequireDefault(_extractLayoutProps);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var View = function (_Component) {
	  _inherits(View, _Component);
	
	  function View(props, context) {
	    _classCallCheck(this, View);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(View).call(this, props, context));
	
	    _this.state = {
	      subviews: null
	    };
	    return _this;
	  }
	
	  _createClass(View, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      var _props = this.props;
	      var container = _props.container;
	      var children = _props.children;
	      var name = _props.name;
	      var width = _props.width;
	      var height = _props.height;
	      var spacing = _props.spacing;
	
	      var size = { width: width, height: height };
	      var client = this.context.client;
	
	
	      var element = (0, _react.createElement)(container, null, children);
	      var layoutProps = (0, _extractLayoutProps2.default)(element);
	
	      client.registerView(name, size, spacing, function () {
	        client.run("initializeSubviews", {
	          viewName: name, layoutProps: layoutProps
	        }, function (layout) {
	          return _this2.onLayout(layout);
	        });
	      });
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      var _this3 = this;
	
	      var viewName = nextProps.name;
	      var width = nextProps.width;
	      var height = nextProps.height;
	      var _props2 = this.props;
	      var oldWidth = _props2.width;
	      var oldHeight = _props2.height;
	
	      if (width === oldWidth && height === oldHeight) {
	        return;
	      }
	      this.context.client.run("setSize", {
	        viewName: viewName, size: { width: width, height: height }
	      }, function (layout) {
	        return _this3.onLayout(layout);
	      });
	    }
	  }, {
	    key: "onLayout",
	    value: function onLayout(subviews) {
	      this.setState({ subviews: subviews });
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      return { subviews: this.state.subviews };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props3 = this.props;
	      var container = _props3.container;
	      var children = _props3.children;
	      var width = _props3.width;
	      var height = _props3.height;
	      var style = _props3.style;
	
	      var newProps = {
	        style: _extends({ width: width, height: height }, style)
	      };
	      return (0, _react.createElement)(container, newProps, children);
	    }
	  }]);
	
	  return View;
	}(_react.Component);
	
	View.childContextTypes = {
	  subviews: _react.PropTypes.object
	};
	View.contextTypes = {
	  client: _react.PropTypes.object
	};
	exports.default = View;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var extractLayoutProps = function extractLayoutProps(element) {
	  var acc = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
	
	  if (!element || !element.props) {
	    return null;
	  }
	
	  var _element$props = element.props;
	  var rawConstraints = _element$props.constraints;
	  var children = _element$props.children;
	  var intrinsicWidth = _element$props.intrinsicWidth;
	  var intrinsicHeight = _element$props.intrinsicHeight;
	  var name = _element$props.name;
	
	
	  if (children) {
	    _react.Children.forEach(children, function (child) {
	      return extractLayoutProps(child, acc);
	    });
	  }
	
	  var constraints = rawConstraints ? rawConstraints.map(function (c) {
	    return c.build();
	  }) : null;
	
	  acc.push({
	    constraints: constraints || null,
	    intrinsicWidth: intrinsicWidth || null,
	    intrinsicHeight: intrinsicHeight || null,
	    name: name || null
	  });
	
	  return acc;
	};
	
	exports.default = extractLayoutProps;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var transformer = function transformer(ComposedComponent, props, layout, layoutTransformer) {
	  var layoutProps = layoutTransformer(layout);
	  var newProps = _extends({}, props, layoutProps.props, {
	    style: _extends({}, props.style, layoutProps.style)
	  });
	
	  return (0, _react.createElement)(ComposedComponent, newProps, props.children);
	};
	// The default DOM layout map.
	// Absolutely positions with style attributes.
	var defaultLayoutTransformer = function defaultLayoutTransformer(layout) {
	  return {
	    style: {
	      position: "absolute",
	      width: layout.width,
	      height: layout.height,
	      top: layout.top,
	      left: layout.left
	    }
	  };
	};
	
	exports.default = function (ComposedComponent) {
	  var _class, _temp;
	
	  var layoutTransformer = arguments.length <= 1 || arguments[1] === undefined ? // eslint-disable-line space-infix-ops
	  defaultLayoutTransformer : arguments[1];
	  return _temp = _class = function (_Component) {
	    _inherits(_class, _Component);
	
	    function _class() {
	      _classCallCheck(this, _class);
	
	      return _possibleConstructorReturn(this, Object.getPrototypeOf(_class).apply(this, arguments));
	    }
	
	    _createClass(_class, [{
	      key: "render",
	      value: function render() {
	        var zeroLayout = {
	          width: 0,
	          height: 0,
	          top: 0,
	          right: 0,
	          bottom: 0,
	          left: 0
	        };
	
	        var name = this.props.name;
	        var subviews = this.context.subviews;
	
	        var layout = subviews && name && subviews[name] && subviews[name].layout ? subviews[name].layout : zeroLayout;
	
	        // Is this an AutoDOM component?
	        if (typeof ComposedComponent === "string") {
	          return transformer(ComposedComponent, this.props, layout, layoutTransformer);
	        }
	
	        // If not, pass the layout props to the wrapped component
	        return _react2.default.createElement(ComposedComponent, _extends({}, this.props, {
	          layout: layout
	        }));
	      }
	    }]);
	
	    return _class;
	  }(_react.Component), _class.contextTypes = {
	    subviews: _react.PropTypes.object
	  }, _temp;
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.whitelist = undefined;
	
	var _react = __webpack_require__(2);
	
	var _subview = __webpack_require__(7);
	
	var _subview2 = _interopRequireDefault(_subview);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// This is to override any DOM nodes that can't
	// use the default position: absolute transform
	/* eslint-disable new-cap */
	var transformers = {};
	
	var whitelist = exports.whitelist = [
	// block level elements (should all be safe)
	"address", "article", "aside", "blockquote", "canvas", "dd", "div", "dl", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "li", "main", "nav", "noscript", "ol", "output", "p", "pre", "section", "table", "ul", "video", "div", "img", "blockquote",
	
	// safe inline elements
	"img", "span", "button", "input", "label", "select", "textarea"];
	
	exports.default = Object.keys(_react.DOM).filter(function (key) {
	  return whitelist.indexOf(key) !== -1;
	}).reduce(function (acc, key) {
	  acc[key] = transformers[key] ? (0, _subview2.default)(key, transformers[key]) : (0, _subview2.default)(key);
	  return acc;
	}, {});

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _subview = __webpack_require__(7);
	
	var _subview2 = _interopRequireDefault(_subview);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* eslint-disable new-cap */
	
	
	var transformers = {
	  rect: function rect(layout) {
	    return {
	      transformType: "props",
	      props: {
	        x: layout.left,
	        y: layout.top,
	        width: layout.width,
	        height: layout.height
	      }
	    };
	  },
	  line: function line(layout) {
	    return {
	      transformType: "props",
	      props: {
	        x1: layout.left,
	        x2: layout.right,
	        y1: layout.top,
	        y2: layout.bottom
	      }
	    };
	  },
	  text: function text(layout) {
	    return {
	      transformType: "props",
	      props: {
	        x: layout.left,
	        y: layout.top
	      }
	    };
	  },
	  circle: function circle(layout) {
	    return {
	      transformType: "props",
	      props: {
	        cx: layout.left + layout.width / 2,
	        cy: layout.top + layout.height / 2,
	        r: layout.width / 2
	      }
	    };
	  },
	  ellipse: function ellipse(layout) {
	    return {
	      transformType: "props",
	      props: {
	        cx: layout.left + layout.width / 2,
	        cy: layout.top + layout.height / 2,
	        rx: layout.width / 2,
	        ry: layout.height / 2
	      }
	    };
	  }
	};
	
	exports.default = Object.keys(transformers).reduce(function (acc, key) {
	  acc[key] = (0, _subview2.default)(key, transformers[key]);
	  return acc;
	}, {});

/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ConstraintBuilder = function () {
	  function ConstraintBuilder(constraint) {
	    _classCallCheck(this, ConstraintBuilder);
	
	    this.constraint = constraint || null;
	  }
	
	  _createClass(ConstraintBuilder, [{
	    key: "whichSide",
	    value: function whichSide(prop) {
	      return this.constraint && prop + "1" in this.constraint ? 2 : 1;
	    }
	  }, {
	    key: "subview",
	    value: function subview(name) {
	      var side = this.whichSide("view");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "view" + side, name)));
	    }
	  }, {
	    key: "constant",
	    value: function constant(_constant) {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        attr2: "const",
	        constant: _constant
	      }));
	    }
	  }, {
	    key: "plus",
	    value: function plus(constant) {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        constant: constant
	      }));
	    }
	  }, {
	    key: "minus",
	    value: function minus(constant) {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        constant: -constant
	      }));
	    }
	  }, {
	    key: "times",
	    value: function times(multiplier) {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        multiplier: multiplier
	      }));
	    }
	  }, {
	    key: "withPriority",
	    value: function withPriority(priority) {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        priority: priority
	      }));
	    }
	  }, {
	    key: "build",
	    value: function build() {
	      return this.constraint;
	    }
	  }, {
	    key: "superview",
	    get: function get() {
	      var side = this.whichSide("view");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "view" + side, null)));
	    }
	  }, {
	    key: "to",
	    get: function get() {
	      return new ConstraintBuilder(this.constraint);
	    }
	  }, {
	    key: "be",
	    get: function get() {
	      return new ConstraintBuilder(this.constraint);
	    }
	  }, {
	    key: "equal",
	    get: function get() {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        relation: "equ"
	      }));
	    }
	  }, {
	    key: "lessThanOrEqualTo",
	    get: function get() {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        relation: "leq"
	      }));
	    }
	  }, {
	    key: "greaterThanOrEqualTo",
	    get: function get() {
	      return new ConstraintBuilder(_extends({}, this.constraint, {
	        relation: "geq"
	      }));
	    }
	  }, {
	    key: "width",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "width")));
	    }
	  }, {
	    key: "height",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "height")));
	    }
	  }, {
	    key: "top",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "top")));
	    }
	  }, {
	    key: "left",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "left")));
	    }
	  }, {
	    key: "bottom",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "bottom")));
	    }
	  }, {
	    key: "right",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "right")));
	    }
	  }, {
	    key: "centerX",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "centerX")));
	    }
	  }, {
	    key: "centerY",
	    get: function get() {
	      var side = this.whichSide("attr");
	      return new ConstraintBuilder(_extends({}, this.constraint, _defineProperty({}, "attr" + side, "centerY")));
	    }
	  }]);
	
	  return ConstraintBuilder;
	}(); // Not typechecking with flow (doesn't support getters yet)
	
	exports.default = function () {
	  return new ConstraintBuilder();
	};

/***/ }
/******/ ])
});
;
//# sourceMappingURL=radium-constraints.js.map