!function(l,d){"object"==typeof exports&&"object"==typeof module?module.exports=d(require("react")):"function"==typeof define&&define.amd?define(["react"],d):"object"==typeof exports?exports.RadiumConstraints=d(require("react")):l.RadiumConstraints=d(l.React)}(this,function(l){return function(l){function d(Z){if(c[Z])return c[Z].exports;var u=c[Z]={exports:{},id:Z,loaded:!1};return l[Z].call(u.exports,u,u.exports,d),u.loaded=!0,u.exports}var c={};return d.m=l,d.c=c,d.p="",d(0)}([function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}Object.defineProperty(d,"__esModule",{value:!0}),d.constrain=d.AutoSVG=d.AutoDOM=d.Subview=d.View=void 0;var u=c(1),X=Z(u),m=c(5),t=Z(m),b=c(7),n=Z(b),i=c(8),e=Z(i),a=c(9),p=Z(a),W=c(10),o=Z(W);d["default"]=X["default"],d.View=t["default"],d.Subview=n["default"],d.AutoDOM=e["default"],d.AutoSVG=p["default"],d.constrain=o["default"]},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}function u(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}function X(l,d){if(!l)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!d||"object"!=typeof d&&"function"!=typeof d?l:d}function m(l,d){if("function"!=typeof d&&null!==d)throw new TypeError("Super expression must either be null or a function, not "+typeof d);l.prototype=Object.create(d&&d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}}),d&&(Object.setPrototypeOf?Object.setPrototypeOf(l,d):l.__proto__=d)}Object.defineProperty(d,"__esModule",{value:!0});var t=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),b=c(2),n=Z(b),i=c(3),e=Z(i),a=function(l){function d(l){u(this,d);var c=X(this,Object.getPrototypeOf(d).call(this,l));return c.client=new e["default"],c}return m(d,l),t(d,[{key:"componentWillUnmount",value:function(){this.client.terminate()}},{key:"render",value:function(){return n["default"].createElement("div",null,this.props.children)}},{key:"getChildContext",value:function(){return{client:this.client}}}]),d}(b.Component);a.childContextTypes={client:b.PropTypes.instanceOf(e["default"])},a.propTypes={children:b.PropTypes.node},d["default"]=a},function(d,c){d.exports=l},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}function u(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(d,"__esModule",{value:!0});var X=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),m=c(4),t=Z(m),b=function(){return new Worker(URL.createObjectURL(new Blob([atob("")],{
type:"text/javascript"})))},n=4,i=function(){function l(d){var c=arguments.length<=1||void 0===arguments[1]?b:arguments[1],Z=arguments.length<=2||void 0===arguments[2]?t["default"]:arguments[2];u(this,l),this.views={},this.workers=[],this.currentWorker=0;for(var X=navigator.hardwareConcurrency,m=d||X||n;m--;){var i=new Z(c());this.workers.push(i)}}return X(l,[{key:"registerView",value:function(l,d,c,Z){this.views[l]||(this.views[l]={workerId:this.currentWorker,callback:Z},this.workers[this.currentWorker].run("registerView",{viewName:l,size:d,spacing:c},Z),this.currentWorker===this.workers.length-1?this.currentWorker=0:this.currentWorker++)}},{key:"deregisterView",value:function(l,d){if(this.views[l]){var c=this.workerForView(l);c&&(c.run("deregisterView",{viewName:l},d),this.views[l]=null)}}},{key:"workerForView",value:function(l){return this.views[l]?this.workers[this.views[l].workerId]:null}},{key:"run",value:function(l,d,c){var Z=this.workerForView(d.viewName);Z&&Z.run(l,d,c)}},{key:"terminate",value:function(){var l=!0,d=!1,c=void 0;try{for(var Z,u=this.workers[Symbol.iterator]();!(l=(Z=u.next()).done);l=!0){var X=Z.value;X.terminate()}}catch(m){d=!0,c=m}finally{try{!l&&u["return"]&&u["return"]()}finally{if(d)throw c}}this.workers=[],this.currentWorker=0}}]),l}();d["default"]=i},function(l,d){"use strict";function c(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(d,"__esModule",{value:!0});var Z=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),u=function(){function l(d){var Z=this;c(this,l),this.worker=d,this.callbacks={},this.worker.onmessage=function(l){var d=l.data,c=d.method||null;if(c){var u=Z.callbacks[c];u&&(u(d.result||null),Z.callbacks[c]=null)}}}return Z(l,[{key:"run",value:function(l,d,c){this.callbacks[l]=c,this.worker.postMessage({method:l,args:d})}},{key:"terminate",value:function(){this.worker.terminate()}}]),l}();d["default"]=u},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}function u(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}function X(l,d){if(!l)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!d||"object"!=typeof d&&"function"!=typeof d?l:d}function m(l,d){if("function"!=typeof d&&null!==d)throw new TypeError("Super expression must either be null or a function, not "+typeof d);l.prototype=Object.create(d&&d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}}),d&&(Object.setPrototypeOf?Object.setPrototypeOf(l,d):l.__proto__=d)}Object.defineProperty(d,"__esModule",{value:!0});var t=Object.assign||function(l){for(var d=1;d<arguments.length;d++){var c=arguments[d];for(var Z in c)Object.prototype.hasOwnProperty.call(c,Z)&&(l[Z]=c[Z])}return l},b=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),n=c(2),i=c(6),e=Z(i),a=function(l){function d(l,c){u(this,d);var Z=X(this,Object.getPrototypeOf(d).call(this,l,c));return Z.state={subviews:null},Z}return m(d,l),b(d,[{key:"componentDidMount",value:function(){var l=this,d=this.props,c=d.container,Z=d.children,u=d.name,X=d.width,m=d.height,t=d.spacing,b={width:X,height:m},i=this.context.client,a=(0,n.createElement)(c,null,Z),p=(0,e["default"])(a);i.registerView(u,b,t,function(){i.run("initializeSubviews",{viewName:u,layoutProps:p},function(d){return l.onLayout(d)})})}},{key:"componentWillReceiveProps",value:function(l){var d=this,c=l.name,Z=l.width,u=l.height,X=this.props,m=X.width,t=X.height;Z===m&&u===t||this.context.client.run("setSize",{viewName:c,size:{width:Z,height:u}},function(l){return d.onLayout(l)})}},{key:"onLayout",value:function(l){this.setState({subviews:l})}},{key:"getChildContext",value:function(){return{subviews:this.state.subviews}}},{key:"render",value:function(){var l=this.props,d=l.container,c=l.children,Z=l.width,u=l.height,X=l.style,m={style:t({width:Z,height:u},X)};return(0,n.createElement)(d,m,c)}}]),d}(n.Component);a.childContextTypes={subviews:n.PropTypes.object},a.contextTypes={client:n.PropTypes.object},d["default"]=a},function(l,d,c){"use strict";Object.defineProperty(d,"__esModule",{value:!0});var Z=c(2),u=function X(l){var d=arguments.length<=1||void 0===arguments[1]?[]:arguments[1];if(!l||!l.props)return null;var c=l.props,u=c.constraints,m=c.children,t=c.intrinsicWidth,b=c.intrinsicHeight,n=c.name;m&&Z.Children.forEach(m,function(l){return X(l,d)});var i=u?u.map(function(l){return l.build()}):null;return d.push({constraints:i||null,intrinsicWidth:t||null,intrinsicHeight:b||null,name:n||null}),d};d["default"]=u},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}function u(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}function X(l,d){if(!l)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!d||"object"!=typeof d&&"function"!=typeof d?l:d}function m(l,d){if("function"!=typeof d&&null!==d)throw new TypeError("Super expression must either be null or a function, not "+typeof d);l.prototype=Object.create(d&&d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}}),d&&(Object.setPrototypeOf?Object.setPrototypeOf(l,d):l.__proto__=d)}Object.defineProperty(d,"__esModule",{value:!0});var t=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),b=Object.assign||function(l){for(var d=1;d<arguments.length;d++){var c=arguments[d];for(var Z in c)Object.prototype.hasOwnProperty.call(c,Z)&&(l[Z]=c[Z])}return l},n=c(2),i=Z(n),e=function(l,d,c,Z){var u=Z(c),X=b({},d,u.props,{style:b({},d.style,u.style)});return(0,n.createElement)(l,X,d.children)},a=function(l){return{style:{position:"absolute",width:l.width,height:l.height,top:l.top,left:l.left}}};d["default"]=function(l){var d,c,Z=arguments.length<=1||void 0===arguments[1]?a:arguments[1];return c=d=function(d){function c(){return u(this,c),X(this,Object.getPrototypeOf(c).apply(this,arguments))}return m(c,d),t(c,[{key:"render",value:function(){var d={width:0,height:0,top:0,right:0,bottom:0,left:0},c=this.props.name,u=this.context.subviews,X=u&&c&&u[c]&&u[c].layout?u[c].layout:d;return"string"==typeof l?e(l,this.props,X,Z):i["default"].createElement(l,b({},this.props,{layout:X}))}}]),c}(n.Component),d.contextTypes={subviews:n.PropTypes.object},c}},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}Object.defineProperty(d,"__esModule",{value:!0}),d.whitelist=void 0;var u=c(2),X=c(7),m=Z(X),t={},b=d.whitelist=["address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","main","nav","noscript","ol","output","p","pre","section","table","ul","video","div","img","blockquote","img","span","button","input","label","select","textarea"];d["default"]=Object.keys(u.DOM).filter(function(l){return-1!==b.indexOf(l)}).reduce(function(l,d){return l[d]=t[d]?(0,m["default"])(d,t[d]):(0,m["default"])(d),l},{})},function(l,d,c){"use strict";function Z(l){return l&&l.__esModule?l:{"default":l}}Object.defineProperty(d,"__esModule",{value:!0});var u=c(7),X=Z(u),m={rect:function(l){return{transformType:"props",props:{x:l.left,y:l.top,width:l.width,height:l.height}}},line:function(l){return{transformType:"props",props:{x1:l.left,x2:l.right,y1:l.top,y2:l.bottom}}},text:function(l){return{transformType:"props",props:{x:l.left,y:l.top}}},circle:function(l){return{transformType:"props",props:{cx:l.left+l.width/2,cy:l.top+l.height/2,r:l.width/2}}},ellipse:function(l){return{transformType:"props",props:{cx:l.left+l.width/2,cy:l.top+l.height/2,rx:l.width/2,ry:l.height/2}}}};d["default"]=Object.keys(m).reduce(function(l,d){return l[d]=(0,X["default"])(d,m[d]),l},{})},function(l,d){"use strict";function c(l,d,c){return d in l?Object.defineProperty(l,d,{value:c,enumerable:!0,configurable:!0,writable:!0}):l[d]=c,l}function Z(l,d){if(!(l instanceof d))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(d,"__esModule",{value:!0});var u=Object.assign||function(l){for(var d=1;d<arguments.length;d++){var c=arguments[d];for(var Z in c)Object.prototype.hasOwnProperty.call(c,Z)&&(l[Z]=c[Z])}return l},X=function(){function l(l,d){for(var c=0;c<d.length;c++){var Z=d[c];Z.enumerable=Z.enumerable||!1,Z.configurable=!0,"value"in Z&&(Z.writable=!0),Object.defineProperty(l,Z.key,Z)}}return function(d,c,Z){return c&&l(d.prototype,c),Z&&l(d,Z),d}}(),m=function(){function l(d){Z(this,l),this.constraint=d||null}return X(l,[{key:"whichSide",value:function(l){return this.constraint&&l+"1"in this.constraint?2:1}},{key:"subview",value:function(d){var Z=this.whichSide("view");return new l(u({},this.constraint,c({},"view"+Z,d)))}},{key:"constant",value:function(d){return new l(u({},this.constraint,{attr2:"const",constant:d}))}},{key:"plus",value:function(d){return new l(u({},this.constraint,{constant:d}))}},{key:"minus",value:function(d){return new l(u({},this.constraint,{constant:-d}))}},{key:"times",value:function(d){return new l(u({},this.constraint,{multiplier:d}))}},{key:"withPriority",value:function(d){return new l(u({},this.constraint,{priority:d}))}},{key:"build",value:function(){return this.constraint}},{key:"superview",get:function(){var d=this.whichSide("view");return new l(u({},this.constraint,c({},"view"+d,null)))}},{key:"to",get:function(){return new l(this.constraint)}},{key:"be",get:function(){return new l(this.constraint)}},{key:"equal",get:function(){return new l(u({},this.constraint,{relation:"equ"}))}},{key:"lessThanOrEqualTo",get:function(){return new l(u({},this.constraint,{relation:"leq"}))}},{key:"greaterThanOrEqualTo",get:function(){return new l(u({},this.constraint,{relation:"geq"}))}},{key:"width",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"width")))}},{key:"height",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"height")))}},{key:"top",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"top")))}},{key:"left",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"left")))}},{key:"bottom",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"bottom")))}},{key:"right",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"right")))}},{key:"centerX",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"centerX")))}},{key:"centerY",get:function(){var d=this.whichSide("attr");return new l(u({},this.constraint,c({},"attr"+d,"centerY")))}}]),l}();d["default"]=function(){return new m}}])});
//# sourceMappingURL=radium-constraints.min.js.map